package com.wipro.fooddeliveryapp.restuarant.servicess;

import java.util.List;

import org.springframework.stereotype.Service;

import com.wipro.fooddeliveryapp.restuarant.entitys.Restuarant;
import com.wipro.fooddeliveryapp.restuarant.repositorys.RestuarantRepository;

import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Service
@Slf4j
@RequiredArgsConstructor
public class RestuarantServiceImpl implements RestuarantService {

	private final RestuarantRepository restuarantRepository;

	@Override
	public Restuarant saveData(Restuarant restuarant) {
		 restuarant.getMenus().forEach(menu -> menu.setRestuarant(restuarant));
		return restuarantRepository.save(restuarant);
	}

	@Override
	public List<Restuarant> getAll() {
		return restuarantRepository.findAll();
	}
	
	public Restaurant getRestaurantById(Long id) {
	    return restaurantRepository.findById(id)
	            .orElseThrow(() -> new RuntimeException("Restaurant not found with ID: " + id));
	}

	public Restaurant updateRestaurant(Long id, Restaurant updatedRestaurant) {
	    Restaurant existing = restaurantRepository.findById(id)
	            .orElseThrow(() -> new RuntimeException("Restaurant not found with ID: " + id));

	    existing.setRname(updatedRestaurant.getRname());
	    existing.setRaddress(updatedRestaurant.getRaddress());

	    if (updatedRestaurant.getMenus() != null) {
	        updatedRestaurant.getMenus().forEach(menu -> menu.setRestaurant(existing));
	        existing.setMenus(updatedRestaurant.getMenus());
	    }

	    return restaurantRepository.save(existing);
	}

	public void deleteRestaurant(Long id) {
	    restaurantRepository.deleteById(id);
	}

}
